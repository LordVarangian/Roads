road_build = {
	if = {
		limit = { has_building = upgraded_road }
	}
	else_if = {
		limit = { has_building = road }
		add_building = upgraded_road
	}
	else_if = {
		limit = { has_building = dirt_road }
		add_building = road
	}
	else = {
		add_building = dirt_road
	}
}
road_destroy = {
	trigger_switch = {
		on_trigger = has_building
		dirt_road = { remove_building = dirt_road }
		road = {
			remove_building = road
			add_building = dirt_road
		}
		upgraded_road = {
			remove_building = upgraded_road
			add_building = road
		}
	}
}

road_cap_limit = { #which
	trigger_switch = {
		on_trigger = has_building
		dirt_road = { limit_variable = { which = $which$ value = 1 } }
		road = { limit_variable = { which = $which$ value = 2 } }
		upgraded_road = { limit_variable = { which = $which$ value = 3 } }
	}
}
road_recalculate_province = {
	#wip
}
road_recalculate_country = {
	if = {
		limit = {
			NOT = { has_country_modifier = road_calc }
		}
		add_country_modifier = {
			name = road_calc
			duration = 1
		}
		road_recalculate = yes
	}
}

road_recalculate = {
	log = log_4
	save_event_target_as = country
	set_variable = { which = r_step value = 0 }
	road_recalculate_setup = yes
	set_country_flag = r_calc
	while = {
		limit = { has_country_flag = r_calc }
		clr_country_flag = r_calc
		road_recalculate_h = {}
	}
	log = "  Done"
}

road_recalculate_step = {
	#old
	save_event_target_as = country
	log = "====="
	if = {
		limit = {
			has_country_flag = r_calc
		}
		change_variable = { which = r_step value = 1 }
		log = log_1
		clr_country_flag = r_calc
		road_recalculate_h = { log = yes }
	}
	else = {
		set_variable = { which = r_step value = 0 }
		log = "  New Calculation"
		road_recalculate_setup = yes
		set_country_flag = r_calc
	}
}

road_recalculate_h = {
	every_owned_province = {
		limit = { has_province_flag = r_calc }
		[[log]log = log_2]
		PREV = { set_country_flag = r_calc }
		clr_province_flag = r_calc
		every_neighbor_province = {
			limit = {
				owned_by = event_target:country
				has_road = yes
				NOT = { check_variable = { which = r_cap which = PREV } }
			}
			[[log]log = log_3]
			set_variable = { which = r_cap which = PREV }
			road_cap_limit = { which = r_cap }
			set_province_flag = r_calc
		}
	}
}
road_recalculate_setup = {
	every_owned_province = {
		set_variable = { which = r_cap value = -1 }
	}
	every_owned_province = {
		limit = {
			OR = {
				is_capital = yes
				has_province_modifier = regional_capital_modifier
			}
		}
		max_variable = { which = r_cap }
		road_cap_limit = { which = r_cap }
		limit_variable = { which = r_cap value = 1 lower = yes }
		set_province_flag = r_calc
	}
}
road_recalculate_end = {
	every_owned_province = {
		limit = { has_road_connection = yes }
		set_variable = { which = r_cap_road which = r_cap }
	}
	every_owned_province = {
		limit = { has_road_connection = yes }
		set_variable = { which = temp which = r_cap_road }
		every_neighbor_province = {
			limit = {
				owned_by = event_target:country
				NOT = { check_variable = { which = r_cap which = PREV } }
				NOT = { check_variable = { which = r_cap_road which = PREV } }
			}
			set_variable = { which = temp which = PREV }
			set_variable = { which = r_cap which = temp }
		}
	}
}